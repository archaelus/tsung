* IDX-tsunami crash when I start it 

  does your erlang system has ssl support enabled ?

  to test it:
  > erl
  Eshell V5.2  (abort with ^G)
  1> ssl:start()
  you should see 'ok' 

 if it doesn't work, maybe you can do the following thing (it seems to
 be a bug in the R9B-0 building process) :

 cd /usr/lib/erlang/lib/ssl-2.3.5/priv
 mkdir bin
 cd obj
 make

* IDX-tsunami still crash

 to see what happen, start IDX-Tsunami by hand (replace $prefix by the
 directory where IDX-Tsunami is installed, /usr/local/idx-tsunami by
 default)

 1. create a config file with 'idx-tsunami.pl --config'

 2. cd to the ebin directory ($prefix/erlang/tsunami-0.2.0/ebin)

 3. start the tsunami application in a first node:
 erl -sname tsunami0 -setcookie 'tsunami'   -config $prefix/etc/tsunami0.config
 Eshell V5.2  (abort with ^G)
 1> ssl:start().
 ok
 2> application:start(tsunami).
 you should see 'ok' 

 4. in another shell, in the same directory, start the
 tsunami_controller application in a second node:
 erl -sname controller -setcookie 'tsunami'   -config $prefix/etc/tsunami0.config
 Erlang (BEAM) emulator version 5.2 [source] [hipe] [threads:0]
 Eshell V5.2  (abort with ^G)
 1> ssl:start().
 ok
 2> application:start(tsunami_controller).
 you should see 'ok' 

 If something is wrong, start sasl ( application:start(sasl) ) first to
 have more logs about what happens

* What is the format of the stats file idx-tsunami.log0 ?

 this file is updated every 10s, it looks like:

 ----
 # stats: dump at 1045817668
 stats: reconnect 1 11
 stats: page_resptime 2 23.9185 1.83948 202.245 22.0790 2 
 stats: size 58269 664029
 stats: response_time 5 3.04958 1.40884 25.6390 1.84204 5 
 stats: 200 2 16
 stats: 404 3 49
 # stats: dump at 1045817678
 stats: reconnect 1 12
 stats: page_resptime 1 56.2450 0.00000e+0 202.245 22.0790 1 
 stats: size 120028 784057
 stats: response_time 1 56.2450 0.00000e+0 56.2450 1.84204 1 
 stats: 200 1 17
 stats: 404 0 49
 ...
 ----

the format is, for page_resptime, response_time, session:
# stats:'name' count(during the last 10sec) mean stdvar max min count(again, useless)
or for HTTP returns code, size, reconnect ...
# stats:'name' count(during the last 10sec) totalcount(since the beginning)
